header-from: ./.config/header.md

version: ""

formatter: markdown table

name: terraform-aws-ecs-service

content: |-
  {{ .Header }}

  # terraform-aws-ecs-service

  GitHub: [ StratusGrid/terraform-aws-ecs-service](https://github.com/StratusGrid/terraform-aws-ecs-service)

  ecs-service is used to create an ecs service and the corresponding codedeploy, log groups, codepipeline artifacts,
  etc. It is intended to be used with StratusGrid's multi-account ecs pipeline module to allow for container images to be
  passed immutably from cluster to cluster in different environments and accounts in a single contiguous pipeline.

  For this purpose, ecs-service outputs a map which can be used to provide configuration for an environment stage
  when provisioning the pipeline.

  ## Examples
  Example use of the module:
  ```hcl
  {{ include "examples/complete/example1.tfnot" }}
  ```

  Example Outputs which can feed CodePipeline Module:
  ```hcl
  {{ include "examples/outputs/example1.tfnot" }}
  ```
  ---

  {{ .Resources }}

  {{ .Inputs }}

  {{ .Outputs }}

  ---

  ## Contributors
  - Chris Hurst [StratusChris](https://github.com/StratusChris)
  - Chris Childress [chrischildresssg](https://github.com/chrischildresssg)

  ## Ideas for future enhancements
  - Potentially make the kms key optional to better support same account options with less inputs?
  - Have the iam-cicd-account iam resources be optional and default to not creating via count
  - Move autoscaling into the module. To add autoscaling to module, I would:
    - Move the appautoscaling target and policy into the module
    - Have two policies which it selects based off of a string or didn't do if set to false (or left blank?) on autoscaling
  - Put the initialization container definition into the module by making it an optional variable which has a local with the config so it matches ports and then coalesces the value
  - Add in other codedeploy strategies?


  Note, manual changes to the README will be overwritten when the documentation is updated. To update the documentation, run `terraform-docs -c .config/.terraform-docs.yml .`

sections:
  show:
    - header
    - resources
    - inputs
    - outputs
    - providers
    - requirements

sort:
  enabled: true
  by: name

output:
  file: README.md
  mode: replace
